.button {
  display: inline-flex;
  font-size: 100%;
  @extend .button-box-shadow;
  padding: (
      (
          $button-form--height - get-line-height(button) -
            ($button-form--border-width * 2)
        ) / 2
    )
    ($button--padding-h - $button-form--border-width);
  // height: $button-form--height;
  text-decoration: none !important;
  text-transform: $button--transform;
  color: color(button-light);
  background-color: color-bg(button-light);
  border-width: $button-form--border-width;
  border-style: $button-form--border-style;
  border-color: color-border(button-light);
  border-radius: $button--radius;
  cursor: pointer;
  justify-content: center;
  text-align: center;
  letter-spacing: inherit;
  white-space: nowrap;
  transition: background 0.15s ease;

  &:active {
    outline: 0;
  }

  &:hover {
    background-color: color-bg(button-light-hover);
    border-color: color-border(button-light-hover);
  }

  &.is-loading {
    position: relative;
    color: transparent !important;
    pointer-events: none;

    &::after {
      content: "";
      display: block;
      position: absolute;
      width: get-line-height(button);
      height: get-line-height(button);
      margin-left: -(get-line-height(button) / 2);
      margin-top: -(get-line-height(button) / 2);
      top: 50%;
      left: 50%;
      border: $button-loading--thickness solid color(button-light);
      border-radius: 50%;
      border-right-color: transparent !important;
      border-top-color: transparent !important;
      z-index: 1;
      animation: button-loading 0.6s infinite linear;
    }
  }

  &.disabled {
    cursor: unset;
    color: color(button-disabled);
    background-color: color-bg(button-disabled) !important;
    border-color: color-border(button-disabled);

    &.is-loading {
      &::after {
        border-color: color(button-disabled);
      }
    }
  }
}

.button-sm {
  padding: (
      (
          $button-form-sm--height - get-line-height(button) -
            ($button-form--border-width * 2)
        ) / 2
    )
    ($button-sm--padding-h - $button-form--border-width);
  height: $button-form-sm--height;
  @include font-size(button);
}

.button-dark {
  color: color(button-dark);
  background-color: color-bg(button-dark);
  border-color: color-border(button-dark);

  &:hover {
    background-color: color-bg(button-dark-hover);
    border-color: color-border(button-dark-hover);
  }

  &.is-loading {
    &::after {
      border-color: color(button-dark);
    }
  }
}
.button-light-grey {
  background-color: color-bg(button-dark-hover);
  border-color: color-border(button-dark-hover);
  color: white;
}
.button-light-green {
  background-color: color-bg(button-primary-hover);
  border-color: color-border(button-primary-hover);
  color: white;
  &:hover {
    background-color: color-bg(button-primary-hover);
    // border-color: color-border(button-secondary-hover);
  }
}
.button-primary {
  color: white;
  background-color: color-bg(button-primary) !important;
  border-color: color-border(button-primary) !important;

  &-login {
    background-color: transparent;
    color: white; // color-bg(button-primary);
    border: 2px solid color-bg(button-primary);
  }

  &:hover {
    background-color: color-bg(button-primary-hover);
    border-color: color-border(button-primary-hover);
  }

  &.is-loading {
    &::after {
      border-color: color(button-primary);
    }
  }
}

.button-secondary {
  color: color(button-secondary);
  background-color:button--bg(button-secondary)
  // border-color: color-border(button-secondary);

  &:hover {
    background-color: color-bg(button-secondary-hover);
    // border-color: color-border(button-secondary-hover);
  }

  &.is-loading {
    &::after {
      border-color: color(button-secondary);
    }
  }
}

.button-block {
  display: flex;
  width: 100%;
}

.button-primary-border {
  background-color: transparent;
  border: 2px solid color-bg(button-primary);
  color: white;

  &:hover {
    background-color: color-bg(button-primary) !important;
  }
}

.button-group {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: flex-start !important;
  margin-right: -($button-group-padding / 2);
  margin-left: -($button-group-padding / 2);
  margin-top: -($button-group-padding / 2);

  &:last-of-type {
    margin-bottom: -($button-group-padding / 2);
  }

  &:not(:last-of-type) {
    margin-bottom: ($button-group-padding / 2);
  }

  > [class*="button"] {
    margin: $button-group-padding / 2;
  }
}

.dropdown-menu {
  min-width: 4rem !important;
}

.audio-button {
  position: relative;
  cursor: pointer;
}

.audio-button::before {
  content: "";
  position: absolute;
  z-index: 0;
  left: 50%;
  top: 51.4%;
  transform: translateX(-50%) translateY(-50%);
  -webkit-transform: translateX(-50%) translateY(-50%);
  -ms-transform: translateX(-50%) translateY(-50%);
  -o-transform: translateX(-50%) translateY(-50%);
  display: block;
  width: 81px;
  height: 81px;
  border: 2px solid #00c6c2;
  border-radius: 50%;
  -webkit-animation: 1.5s ease-out pulse-once;
  animation: 1.5s ease-out pulse-once;
  opacity: 0;
}

.practice-button {
  padding: 2px 25px;
  border-radius: 30px;
  border: 3px solid #f8c5a6;
  margin: 12px;
}

.button-box-shadow {
  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.2), 0px 2px 1px rgba(0, 0, 0, 0.12),
    0px 1px 1px rgba(0, 0, 0, 0.14);
}

.img-button {
  background: transparent;
  border: none;
  cursor: pointer;
  border-radius: 50em;
  padding: 0;
}

@-webkit-keyframes pulse-once {
  0% {
    -webkit-transform: translateX(-50%) translateY(-50%) translateZ(0) scale(1);
    transform: translateX(-50%) translateY(-50%) translateZ(0) scale(1);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    -webkit-transform: translateX(-50%) translateY(-50%) translateZ(0)
      scale(1.2);
    transform: translateX(-50%) translateY(-50%) translateZ(0) scale(1.2);
    opacity: 0;
  }
}
@keyframes pulse-once {
  0% {
    -webkit-transform: translateX(-50%) translateY(-50%) translateZ(0) scale(1);
    transform: translateX(-50%) translateY(-50%) translateZ(0) scale(1);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    -webkit-transform: translateX(-50%) translateY(-50%) translateZ(0)
      scale(1.2);
    transform: translateX(-50%) translateY(-50%) translateZ(0) scale(1.2);
    opacity: 0;
  }
}

// Keyboard buttons

.hg-button {
  color: rgb(30, 46, 46);
  font-size: 1.3em;
  height: 45px;
}

.simple-keyboard.hg-layout-default .hg-button:hover {
  background-color: #f8c5a6;
}

.simple-keyboard.hg-layout-default .hg-button.hg-text-big {
  // background: rgb(255, 0, 0, 0.7);
  // color: white;
  font-size: 35px;
  height: 50px !important;
}

.simple-keyboard.hg-layout-default .hg-button.hg-text-small {
  font-size: 24px;
}

@include media("<=medium") {
  .button-wide-mobile {
    width: 100%;
    max-width: $button--max-size-mobile;
  }
}

@keyframes button-loading {
  0% {
    transform: rotate(0);
  }

  100% {
    transform: rotate(360deg);
  }
}

.selected-wrong {
  opacity: 0.5;
}

.selected-correct {
  box-shadow: 0px 0px 5px 2px rgb(10, 169, 121);
}
